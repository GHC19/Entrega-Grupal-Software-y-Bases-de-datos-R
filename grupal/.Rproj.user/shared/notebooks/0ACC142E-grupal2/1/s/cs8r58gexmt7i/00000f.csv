"0","#Aquí se fitra el dataset según piden en el PUNTO 10 de items obligatorios."
"0","surveys_filtered <- surveys |> "
"0","  filter("
"0","    date_elec >= as.Date(""2008-01-01""),  # Elecciones a partir de 2008"
"0","    !exit_poll,  # Excluir encuestas a pie de urna"
"0","    size >= 500,  # Tamaño muestral de al menos 500"
"0","    as.numeric(field_date_to - field_date_from) > 1  # Más de 1 día de trabajo de campo"
"0","  )"
"0",""
"0","#PUNTO 6: Se definen los partido de interés y el resto van a la categoría otros."
"0","partidos_interes <- c(""PSOE"", ""EAJ-PNV"", ""ERC"", ""EH-BILDU"", ""PP"", ""PODEMOS"", ""CS"", ""BNG"", ""VOX"", ""EA"", ""EH"")"
"0","col_inicio_partidos <- 11 #Es la primera columna donde aparecen los partidos"
"0","columnas_otros <- setdiff(names(surveys_filtered)[col_inicio_partidos:ncol(surveys_filtered)], partidos_interes) #setdiff te dice los elementos distintos de los dos datasets que le pases. En este caso estan por un lado los partidos de interes y por otro lado todos, los elementos distintos son los partidos que no coinciden y que van a ir a la categoria otros. "
"0",""
"0","surveys_filtered <- surveys_filtered %>%"
"0","  mutate("
"0","    `EH-BILDU` = rowSums(across(c(""EH-BILDU"", ""EH"", ""EA""), ~replace_na(., 0)), na.rm = TRUE), # Suma de columnas específicas"
"0","    OTROS = rowSums(across(all_of(columnas_otros), ~replace_na(., 0)), na.rm = TRUE) # Suma dinámica con vector columnas_otros"
"0","  ) %>%"
"0","  select(all_of(partidos_interes), OTROS, everything()) # Reorganizar columnas"
"0",""
"0",""
"0","surveys_filtered"
